/*
* generated by Xtext
*/
grammar InternalPETRI1;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package fr.enseeiht.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package fr.enseeiht.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import fr.enseeiht.services.PETRI1GrammarAccess;

}

@parser::members {
 
 	private PETRI1GrammarAccess grammarAccess;
 	
    public void setGrammarAccess(PETRI1GrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRulePetriNet
entryRulePetriNet 
:
{ before(grammarAccess.getPetriNetRule()); }
	 rulePetriNet
{ after(grammarAccess.getPetriNetRule()); } 
	 EOF 
;

// Rule PetriNet
rulePetriNet
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPetriNetAccess().getGroup()); }
(rule__PetriNet__Group__0)
{ after(grammarAccess.getPetriNetAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePetriNetElement
entryRulePetriNetElement 
:
{ before(grammarAccess.getPetriNetElementRule()); }
	 rulePetriNetElement
{ after(grammarAccess.getPetriNetElementRule()); } 
	 EOF 
;

// Rule PetriNetElement
rulePetriNetElement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPetriNetElementAccess().getAlternatives()); }
(rule__PetriNetElement__Alternatives)
{ after(grammarAccess.getPetriNetElementAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNode
entryRuleNode 
:
{ before(grammarAccess.getNodeRule()); }
	 ruleNode
{ after(grammarAccess.getNodeRule()); } 
	 EOF 
;

// Rule Node
ruleNode
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNodeAccess().getAlternatives()); }
(rule__Node__Alternatives)
{ after(grammarAccess.getNodeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePlace
entryRulePlace 
:
{ before(grammarAccess.getPlaceRule()); }
	 rulePlace
{ after(grammarAccess.getPlaceRule()); } 
	 EOF 
;

// Rule Place
rulePlace
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPlaceAccess().getGroup()); }
(rule__Place__Group__0)
{ after(grammarAccess.getPlaceAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTransition
entryRuleTransition 
:
{ before(grammarAccess.getTransitionRule()); }
	 ruleTransition
{ after(grammarAccess.getTransitionRule()); } 
	 EOF 
;

// Rule Transition
ruleTransition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTransitionAccess().getGroup()); }
(rule__Transition__Group__0)
{ after(grammarAccess.getTransitionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleArc
entryRuleArc 
:
{ before(grammarAccess.getArcRule()); }
	 ruleArc
{ after(grammarAccess.getArcRule()); } 
	 EOF 
;

// Rule Arc
ruleArc
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getArcAccess().getGroup()); }
(rule__Arc__Group__0)
{ after(grammarAccess.getArcAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__PetriNetElement__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPetriNetElementAccess().getNodeParserRuleCall_0()); }
	ruleNode
{ after(grammarAccess.getPetriNetElementAccess().getNodeParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getPetriNetElementAccess().getArcParserRuleCall_1()); }
	ruleArc
{ after(grammarAccess.getPetriNetElementAccess().getArcParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Node__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNodeAccess().getPlaceParserRuleCall_0()); }
	rulePlace
{ after(grammarAccess.getNodeAccess().getPlaceParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getNodeAccess().getTransitionParserRuleCall_1()); }
	ruleTransition
{ after(grammarAccess.getNodeAccess().getTransitionParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__PetriNet__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PetriNet__Group__0__Impl
	rule__PetriNet__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PetriNet__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPetriNetAccess().getPetrinetKeyword_0()); }

	'petrinet' 

{ after(grammarAccess.getPetriNetAccess().getPetrinetKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PetriNet__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PetriNet__Group__1__Impl
	rule__PetriNet__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PetriNet__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPetriNetAccess().getNameAssignment_1()); }
(rule__PetriNet__NameAssignment_1)
{ after(grammarAccess.getPetriNetAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PetriNet__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PetriNet__Group__2__Impl
	rule__PetriNet__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PetriNet__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPetriNetAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getPetriNetAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PetriNet__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PetriNet__Group__3__Impl
	rule__PetriNet__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__PetriNet__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPetriNetAccess().getPetriNetElementsAssignment_3()); }
(rule__PetriNet__PetriNetElementsAssignment_3)*
{ after(grammarAccess.getPetriNetAccess().getPetriNetElementsAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PetriNet__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PetriNet__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PetriNet__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPetriNetAccess().getRightCurlyBracketKeyword_4()); }

	'}' 

{ after(grammarAccess.getPetriNetAccess().getRightCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Place__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Place__Group__0__Impl
	rule__Place__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Place__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPlaceAccess().getPlaceKeyword_0()); }

	'place' 

{ after(grammarAccess.getPlaceAccess().getPlaceKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Place__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Place__Group__1__Impl
	rule__Place__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Place__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPlaceAccess().getNameAssignment_1()); }
(rule__Place__NameAssignment_1)
{ after(grammarAccess.getPlaceAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Place__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Place__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Place__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPlaceAccess().getGroup_2()); }
(rule__Place__Group_2__0)?
{ after(grammarAccess.getPlaceAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Place__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Place__Group_2__0__Impl
	rule__Place__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Place__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPlaceAccess().getLeftParenthesisKeyword_2_0()); }

	'(' 

{ after(grammarAccess.getPlaceAccess().getLeftParenthesisKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Place__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Place__Group_2__1__Impl
	rule__Place__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Place__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPlaceAccess().getMarkingAssignment_2_1()); }
(rule__Place__MarkingAssignment_2_1)
{ after(grammarAccess.getPlaceAccess().getMarkingAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Place__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Place__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Place__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPlaceAccess().getRightParenthesisKeyword_2_2()); }

	')' 

{ after(grammarAccess.getPlaceAccess().getRightParenthesisKeyword_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Transition__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transition__Group__0__Impl
	rule__Transition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getTransitionKeyword_0()); }

	'transition' 

{ after(grammarAccess.getTransitionAccess().getTransitionKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transition__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transition__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getNameAssignment_1()); }
(rule__Transition__NameAssignment_1)
{ after(grammarAccess.getTransitionAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Arc__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Arc__Group__0__Impl
	rule__Arc__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Arc__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArcAccess().getArcKeyword_0()); }

	'arc' 

{ after(grammarAccess.getArcAccess().getArcKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Arc__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Arc__Group__1__Impl
	rule__Arc__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Arc__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArcAccess().getGroup_1()); }
(rule__Arc__Group_1__0)?
{ after(grammarAccess.getArcAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Arc__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Arc__Group__2__Impl
	rule__Arc__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Arc__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArcAccess().getReadOnlyAssignment_2()); }
(rule__Arc__ReadOnlyAssignment_2)?
{ after(grammarAccess.getArcAccess().getReadOnlyAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Arc__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Arc__Group__3__Impl
	rule__Arc__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Arc__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArcAccess().getFromKeyword_3()); }

	'from' 

{ after(grammarAccess.getArcAccess().getFromKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Arc__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Arc__Group__4__Impl
	rule__Arc__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Arc__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArcAccess().getPredecessorAssignment_4()); }
(rule__Arc__PredecessorAssignment_4)
{ after(grammarAccess.getArcAccess().getPredecessorAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Arc__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Arc__Group__5__Impl
	rule__Arc__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Arc__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArcAccess().getToKeyword_5()); }

	'to' 

{ after(grammarAccess.getArcAccess().getToKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Arc__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Arc__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Arc__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArcAccess().getSuccessorAssignment_6()); }
(rule__Arc__SuccessorAssignment_6)
{ after(grammarAccess.getArcAccess().getSuccessorAssignment_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__Arc__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Arc__Group_1__0__Impl
	rule__Arc__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Arc__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArcAccess().getLeftParenthesisKeyword_1_0()); }

	'(' 

{ after(grammarAccess.getArcAccess().getLeftParenthesisKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Arc__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Arc__Group_1__1__Impl
	rule__Arc__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Arc__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArcAccess().getMultiplicityAssignment_1_1()); }
(rule__Arc__MultiplicityAssignment_1_1)
{ after(grammarAccess.getArcAccess().getMultiplicityAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Arc__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Arc__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Arc__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArcAccess().getRightParenthesisKeyword_1_2()); }

	')' 

{ after(grammarAccess.getArcAccess().getRightParenthesisKeyword_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}









rule__PetriNet__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPetriNetAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getPetriNetAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PetriNet__PetriNetElementsAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPetriNetAccess().getPetriNetElementsPetriNetElementParserRuleCall_3_0()); }
	rulePetriNetElement{ after(grammarAccess.getPetriNetAccess().getPetriNetElementsPetriNetElementParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Place__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPlaceAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getPlaceAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Place__MarkingAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPlaceAccess().getMarkingINTTerminalRuleCall_2_1_0()); }
	RULE_INT{ after(grammarAccess.getPlaceAccess().getMarkingINTTerminalRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getTransitionAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Arc__MultiplicityAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArcAccess().getMultiplicityINTTerminalRuleCall_1_1_0()); }
	RULE_INT{ after(grammarAccess.getArcAccess().getMultiplicityINTTerminalRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Arc__ReadOnlyAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArcAccess().getReadOnlyRKeyword_2_0()); }
(
{ before(grammarAccess.getArcAccess().getReadOnlyRKeyword_2_0()); }

	'r' 

{ after(grammarAccess.getArcAccess().getReadOnlyRKeyword_2_0()); }
)

{ after(grammarAccess.getArcAccess().getReadOnlyRKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Arc__PredecessorAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArcAccess().getPredecessorNodeCrossReference_4_0()); }
(
{ before(grammarAccess.getArcAccess().getPredecessorNodeIDTerminalRuleCall_4_0_1()); }
	RULE_ID{ after(grammarAccess.getArcAccess().getPredecessorNodeIDTerminalRuleCall_4_0_1()); }
)
{ after(grammarAccess.getArcAccess().getPredecessorNodeCrossReference_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Arc__SuccessorAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArcAccess().getSuccessorNodeCrossReference_6_0()); }
(
{ before(grammarAccess.getArcAccess().getSuccessorNodeIDTerminalRuleCall_6_0_1()); }
	RULE_ID{ after(grammarAccess.getArcAccess().getSuccessorNodeIDTerminalRuleCall_6_0_1()); }
)
{ after(grammarAccess.getArcAccess().getSuccessorNodeCrossReference_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


